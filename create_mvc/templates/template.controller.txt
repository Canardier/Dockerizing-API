const {{ capiName }} = require("../models/{{ name }}.model.js");

exports.create = (req, res) => {
    // Validate request
    if (!req.body) {
      res.status(400).send({
        message: "Content can not be empty!"
      });
    }
  
    // Create a {{ capiName }}
    const {{ name }} = new {{ capiName }}({ {% for element in content_table %}
      {{ element }}: req.body.{{ element }}, {% endfor %}
    });
  
    // Save {{ capiName }} in the database
    {{ capiName }}.create({{ name }}, (err, data) => {
      if (err)
        res.status(500).send({
          message:
            err.message || "Some error occurred while creating the {{ capiName }}."
        });
      else res.send(data);
    });
};

exports.findAll = (req, res) => {
    {{ capiName }}.getAll((err, data) => {
      if (err)
        res.status(500).send({
          message:
            err.message || "Some error occurred while retrieving {{ name }}s."
        });
      else res.send(data);
    });
};

exports.findOne = (req, res) => {
    {{ capiName }}.findById(req.params.{{ name }}Id, (err, data) => {
      if (err) {
        if (err.kind === "not_found") {
          res.status(404).send({
            message: `Not found {{ capiName }} with id ${req.params.{{ name }}Id}.`
          });
        } else {
          res.status(500).send({
            message: "Error retrieving {{ capiName }} with id " + req.params.{{ name }}Id
          });
        }
      } else res.send(data);
    });
};

exports.update = (req, res) => {
    // Validate Request
    if (!req.body) {
      res.status(400).send({
        message: "Content can not be empty!"
      });
    }
  
    {{ capiName }}.updateById(
      req.params.{{ name }}Id,
      new {{ capiName }}(req.body),
      (err, data) => {
        if (err) {
          if (err.kind === "not_found") {
            res.status(404).send({
              message: `Not found {{ capiName }} with id ${req.params.{{ name }}Id}.`
            });
          } else {
            res.status(500).send({
              message: "Error updating {{ capiName }} with id " + req.params.{{ name }}Id
            });
          }
        } else res.send(data);
      }
    );
};

exports.delete = (req, res) => {
    {{ capiName }}.remove(req.params.{{ name }}Id, (err, data) => {
      if (err) {
        if (err.kind === "not_found") {
          res.status(404).send({
            message: `Not found {{ capiName }} with id ${req.params.{{ name }}Id}.`
          });
        } else {
          res.status(500).send({
            message: "Could not delete {{ capiName }} with id " + req.params.{{ name }}Id
          });
        }
      } else res.send({ message: `{{ capiName }} was deleted successfully!` });
    });
};

exports.deleteAll = (req, res) => {
    {{ capiName }}.removeAll((err, data) => {
      if (err)
        res.status(500).send({
          message:
            err.message || "Some error occurred while removing all {{ name }}s."
        });
      else res.send({ message: `All {{ capiName }}s were deleted successfully!` });
    });
};